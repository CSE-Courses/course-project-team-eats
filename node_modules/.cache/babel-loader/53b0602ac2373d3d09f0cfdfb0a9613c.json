{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport * as api from \"./api\";\nexport function useBusinessSearch(term, location, price) {\n  const [businesses, setBusinesses] = useState([]);\n  const [amountResults, setAmountResults] = useState();\n  const [searchParams, setSearchParams] = useState({\n    term,\n    location\n  });\n  const [searchWithFilterParams, setsearchWithFilterParams] = useState({\n    price\n  });\n  useEffect(() => {\n    setBusinesses([]);\n\n    const fetchData = async () => {\n      try {\n        const rawData = await api.get(\"/businesses/search\", searchParams, searchWithFilterParams);\n        const resp = await rawData.json();\n        setBusinesses(resp.businesses);\n        setAmountResults(resp.total);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    fetchData();\n  }, [searchParams, searchWithFilterParams]);\n  return [businesses, amountResults, searchParams, setSearchParams, searchWithFilterParams, setsearchWithFilterParams];\n}","map":{"version":3,"sources":["/Users/rakshitdwivedi/Desktop/React/course-project-team-eats/src/hooks/yelp-api/useBusinessSearch.js"],"names":["useState","useEffect","api","useBusinessSearch","term","location","price","businesses","setBusinesses","amountResults","setAmountResults","searchParams","setSearchParams","searchWithFilterParams","setsearchWithFilterParams","fetchData","rawData","get","resp","json","total","e","console","error"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,KAAKC,GAAZ,MAAqB,OAArB;AAEA,OAAO,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,QAAjC,EAA2CC,KAA3C,EAAkD;AACvD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,EAAlD;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC;AAAEI,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,CAAhD;AACA,QAAM,CAACQ,sBAAD,EAAyBC,yBAAzB,IAAsDd,QAAQ,CAAC;AACnEM,IAAAA;AADmE,GAAD,CAApE;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,aAAa,CAAC,EAAD,CAAb;;AACA,UAAMO,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,OAAO,GAAG,MAAMd,GAAG,CAACe,GAAJ,CACpB,oBADoB,EAEpBN,YAFoB,EAGpBE,sBAHoB,CAAtB;AAKA,cAAMK,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;AACAX,QAAAA,aAAa,CAACU,IAAI,CAACX,UAAN,CAAb;AACAG,QAAAA,gBAAgB,CAACQ,IAAI,CAACE,KAAN,CAAhB;AACD,OATD,CASE,OAAOC,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,KAbD;;AAcAN,IAAAA,SAAS;AACV,GAjBQ,EAiBN,CAACJ,YAAD,EAAeE,sBAAf,CAjBM,CAAT;AAmBA,SAAO,CACLN,UADK,EAELE,aAFK,EAGLE,YAHK,EAILC,eAJK,EAKLC,sBALK,EAMLC,yBANK,CAAP;AAQD","sourcesContent":["import { useState, useEffect } from \"react\";\nimport * as api from \"./api\";\n\nexport function useBusinessSearch(term, location, price) {\n  const [businesses, setBusinesses] = useState([]);\n  const [amountResults, setAmountResults] = useState();\n  const [searchParams, setSearchParams] = useState({ term, location });\n  const [searchWithFilterParams, setsearchWithFilterParams] = useState({\n    price,\n  });\n\n  useEffect(() => {\n    setBusinesses([]);\n    const fetchData = async () => {\n      try {\n        const rawData = await api.get(\n          \"/businesses/search\",\n          searchParams,\n          searchWithFilterParams\n        );\n        const resp = await rawData.json();\n        setBusinesses(resp.businesses);\n        setAmountResults(resp.total);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    fetchData();\n  }, [searchParams, searchWithFilterParams]);\n\n  return [\n    businesses,\n    amountResults,\n    searchParams,\n    setSearchParams,\n    searchWithFilterParams,\n    setsearchWithFilterParams,\n  ];\n}\n"]},"metadata":{},"sourceType":"module"}